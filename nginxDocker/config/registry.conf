# For versions of nginx > 1.3.9 that include chunked transfer encoding support
# Replace with appropriate values where necessary
 upstream docker-backend {
    server <docker_registry_ip>;
 }

 upstream docker-frontend {
    server <docker_frontend_ip>;
 }
# uncomment if you want a 301 redirect for users attempting to connect
# on port 80
# NOTE: docker client will still fail. This is just for convenience
# server {
#   listen *:80;
#   server_name <public_ip>;
#   return 301 https://$server_name$request_uri;
# }

server {
  listen <frontend_ssl_port> ssl;
  server_name <public_ip>;

  ssl on;
  ssl_certificate /etc/ssl/certs/docker-registry;
  ssl_certificate_key /etc/ssl/private/docker-registry;

  proxy_set_header  Host           $http_host;   # required for docker client's sake
  proxy_set_header  X-Real-IP      $remote_addr; # pass on real client's IP
  #proxy_set_header  Authorization  ""; # see https://github.com/dotcloud/docker-registry/issues/170
  proxy_read_timeout               900;
  client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads

  location / {
    auth_basic  "Restricted Docker Registry Frontend GUI";
    auth_basic_user_file    /etc/nginx/htpasswd;
    proxy_pass http://docker-frontend;
  }

    # Endpoints which are not requested with authentication
    #location /v1 { proxy_pass http://docker-frontend; }
    #location /v1/_ping { proxy_pass http://docker-frontend; auth_basic off; }
    #location /v1/search { proxy_pass http://docker-frontend; auth_basic off; }

}

server {
  listen <registry_ssl_port> ssl;
  server_name <public_ip>;

  ssl on;
  ssl_certificate /etc/ssl/certs/docker-registry;
  ssl_certificate_key /etc/ssl/private/docker-registry;
  
 client_body_timeout      30s;
 client_body_in_single_buffer     on;
 client_body_temp_path        /dev/nginx 1 2;
 client_max_body_size         0;
 chunked_transfer_encoding    on;
 tcp_nodelay          on;
 tcp_nopush           off;
 proxy_max_temp_file_size     3172m;
 sendfile_max_chunk       0;
 sendfile             off; 
 proxy_set_header  Host           $http_host;   # required for docker client's sake
 proxy_set_header  X-Real-IP      $remote_addr; # pass on real client's IP
 proxy_set_header  Authorization  ""; # see https://github.com/dotcloud/docker-registry/issues/170
 proxy_read_timeout               120s;
 reset_timedout_connection    on;

  location / {
    auth_basic  "Restricted Docker Registry";
    auth_basic_user_file    /etc/nginx/htpasswd;
    proxy_pass http://docker-backend;
  }

  location /v1/_ping {
    auth_basic off;
    proxy_pass http://docker-backend;
  }
  
 location /_ping {
    auth_basic off;
    proxy_pass http://docker-backend;
  }

  location /v1/users {
    auth_basic off;
    proxy_pass http://docker-backend;
  }

}
